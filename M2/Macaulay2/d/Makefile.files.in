M2_OBJECTS :=
M2_CFILES :=
M2_LASTCFILES :=
M2_OPTCFILES := 
M2_EXTRACFILES :=
M2_MADECFILES :=
M2_SRCFILES := 
M2_OPTCFILES += debug.c
ifeq "@DEBUG@" "yes"
M2_OBJECTS += debug.o
endif
M2_OPTCFILES += M2inits1.cc M2inits2.cc M2inits3.cc 
M2_CFILES += gmp_aux.c 
M2_LASTCFILES += M2types.c M2mem.c
M2_LASTCPPFILES += scclib.cpp M2lib.cpp gdbm_interface.cpp
M2_CFILES += main.c 
M2_MADECFILES := startup.c
M2_OBJECTS += $(M2_MADECFILES:.c=.o)
M2_OBJECTS += ../regex/regex.o
M2_CCFILES := gmp_init.cc
M2_OBJECTS += $(M2_CCFILES:.cc=.o)
M2_HFILES := getpagesize.h types.h M2inits.h M2mem.h debug.h startup-header.h startup-trailer.h

M2_DFILES :=
M2_DFILES += arithmetic.dd
M2_DFILES += atomic.dd
M2_DFILES += M2.dd
M2_DFILES += system.dd
M2_DFILES += strings.dd
M2_DFILES += varstrin.dd
M2_DFILES += strings1.dd
M2_DFILES += errio.dd
M2_DFILES += vararray.dd
M2_DFILES += ctype.dd
M2_DFILES += nets.dd
M2_DFILES += varnets.dd
M2_DFILES += interrupts.dd
M2_DFILES += pthread0.dd
M2_DFILES += stdiop0.dd 
M2_DFILES += gmp.dd
M2_DFILES += engine.dd
ifeq (@XML@,yes)
M2_DFILES += xml.dd
M2_LASTCPPFILES += xml-c.cpp
else
M2_SRCFILES += xml.dd xml-c.cpp
endif
M2_DFILES += stdio0.dd
M2_DFILES += parse.dd
M2_DFILES += expr.dd
M2_DFILES += stdio.dd
M2_DFILES += stdiop.dd
M2_DFILES += err.dd
M2_DFILES += gmp1.dd
M2_DFILES += tokens.dd
M2_DFILES += getline.dd
M2_DFILES += lex.dd
M2_DFILES += parser.dd
M2_DFILES += binding.dd
M2_DFILES += basic.dd
M2_DFILES += convertr.dd
M2_DFILES += common.dd
M2_DFILES += util.dd
M2_DFILES += struct.dd
M2_DFILES += classes.dd
M2_DFILES += buckets.dd
M2_DFILES += equality.dd
M2_DFILES += hashtables.dd
M2_DFILES += sets.dd
M2_DFILES += version.dd
M2_DFILES += evaluate.dd
ifeq (@MYSQL@,yes)
M2_DFILES += mysql.dd
M2_SRCFILES += mysqldummy.dd
else
M2_SRCFILES += mysql.dd
M2_DFILES += mysqldummy.dd
endif
M2_DFILES += pthread.dd
M2_DFILES += actors.dd
M2_DFILES += actors2.dd
 M2_DFILES += actors3.dd
M2_DFILES += actors4.dd
# M2_DFILES += tasks.dd
ifeq (@XML@,yes)
M2_DFILES += xmlactors.dd
else
M2_SRCFILES += xmlactors.dd
endif
M2_DFILES += actors5.dd
M2_DFILES += threads.dd
ifeq (@PARI@,yes)
M2_DFILES += pari.dd
M2_HFILES += pari-c.h
M2_CFILES += pari-c.c
else
M2_SRCFILES += pari.dd pari-c.h pari-c.c
endif

M2_DFILES += flint.dd

ifeq (@PYTHON@,yes)
M2_LASTCFILES += python-c.c
M2_DFILES += python.dd
else
M2_SRCFILES += python-c.c python.dd
endif
M2_DFILES += interface.dd interface2.dd
M2_DFILES += texmacs.dd
# this one is last, because it contains the top level interpreter
M2_DFILES += interp.dd

# should automate these dependencies
actors5.o : @srcdir@/startup-header.h
actors5.o basic.o : \
	@srcdir@/../e/engine.h \
	@srcdir@/../e/rand.h \
	@srcdir@/../e/newdelete.hpp \
	@srcdir@/../d/M2mem.h \
	@srcdir@/../d/debug.h \
	../e-includes/statuscodes.h \
	../../include/M2/config.h

# now assemble the files into various categories:
M2_DNAMES := $(patsubst %.d, %, $(patsubst %.dd, %, $(M2_DFILES)))
M2_OBJECTS += $(M2_CFILES:.c=.o)
M2_OBJECTS += M2-factory.o
M2_OBJECTS += $(M2_LASTCFILES:.c=.o)
M2_OBJECTS += $(M2_LASTCCFILES:.cc=.o)
M2_OBJECTS += $(M2_LASTCPPFILES:.cpp=.o)
M2_SRCFILES += $(M2_OPTCFILES) $(M2_CFILES) M2inits.cpp
M2_SRCFILES += $(M2_CCFILES)
M2_SRCFILES += $(M2_HFILES)
M2_SRCFILES += $(M2_DFILES)
M2_SRCFILES += $(M2_LASTCFILES)
M2_SRCFILES += $(M2_LASTCCFILES)
M2_SRCFILES += $(M2_LASTCPPFILES)
# Local Variables:
# mode: Makefile
# compile-command: "echo \"make: Entering directory \\`$M2BUILDDIR/Macaulay2/d'\" && make -C $M2BUILDDIR/Macaulay2/d Makefile.files TAGS "
# End:
